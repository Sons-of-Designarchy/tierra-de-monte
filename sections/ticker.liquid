<section id="ticker-{{ section.id }}" class="tdm-ticker">
  <style>
    /* ===== Container ===== */
    #ticker-{{ section.id }}{
      --gap: 2.2rem;
      --speed: 28s;
      --h: {{ section.settings.height | default: 100 }}px;
      --fs: {{ section.settings.font_size | default: 22 }}px; /* ðŸ‘ˆ font-size variable */
      position: relative;
      min-height: var(--h);
      overflow: hidden;
      isolation: isolate;
      background: {{ section.settings.bg_color | default: 'transparent' }}; /* ðŸ‘ˆ background color */
    }

    /* Background image */
    #ticker-{{ section.id }} .ticker-img{
      position:absolute; inset:0;
      width:100%; height:100%;
      object-fit:cover; object-position:center;
      z-index:1;
      display:block;
    }

    /* Ticker layer */
    #ticker-{{ section.id }} .ticker{
      position:absolute; inset:0;
      display:flex; align-items:center; justify-content:center;
      padding:0; border:0; background:transparent;
      z-index:2;
    }

    /* Typography */
    #ticker-{{ section.id }} .typo-primary,
    #ticker-{{ section.id }} .typo-secondary{
      line-height:1;
      letter-spacing:.08em;
      text-transform:uppercase;
      white-space:nowrap;
      color: {{ section.settings.text_color | default: '#F3EFCF' }};
      font-size: var(--fs); /* ðŸ‘ˆ controlled by setting */
    }

    #ticker-{{ section.id }} .typo-primary{
      font-family: var(--font-heading-family);
      font-weight: var(--font-heading-weight);
    }
    #ticker-{{ section.id }} .typo-secondary{
      font-family: var(--font-body-family);
      font-weight:400;
    }

    /* Monospace toggle */
    {% if section.settings.font_variant == 'mono' %}
      #ticker-{{ section.id }} .typo-primary,
      #ticker-{{ section.id }} .typo-secondary{
        font-family: 'IBMPlexMono-Light', monospace !important;
        font-weight: 300;
        letter-spacing: 0.05em;
      }
    {% endif %}

    /* Seamless marquee */
    #ticker-{{ section.id }} .marquee{ width:100%; overflow:hidden; }
    #ticker-{{ section.id }} .track{
      display:inline-flex; align-items:center; gap:var(--gap);
      will-change:transform;
      animation: ticker-{{ section.id }} var(--speed) linear infinite;
    }
    #ticker-{{ section.id }} .chunk{
      display:inline-flex; align-items:center; gap:var(--gap);
    }
    #ticker-{{ section.id }} .item{ display:inline-flex; align-items:center; gap:.6rem }
    #ticker-{{ section.id }} .icon{ width:18px; height:18px; object-fit:contain; flex:0 0 18px }

    @keyframes ticker-{{ section.id }}{
      from { transform: translateX(0); }
      to   { transform: translateX(-50%); }
    }
  </style>

  {% if section.settings.bg_image != blank %}
    <img
      class="ticker-img"
      src="{{ section.settings.bg_image | image_url: width: 2880 }}"
      alt=""
      loading="lazy"
      aria-hidden="true"
    >
  {% endif %}

  <div class="ticker">
    {% assign copy = section.settings.text | strip | default: 'VIDA QUE GENERA VIDA' %}
    <div class="marquee">
      <div class="track {% if section.settings.typography_variant == 'primary' %}typo-primary{% else %}typo-secondary{% endif %}">
        <span class="chunk">
          {% for i in (1..10) %}
            <span class="item">
              {% if section.settings.icon != blank %}
                <img
                  alt=""
                  class="icon"
                  src="{{ section.settings.icon | image_url }}"
                  width="18"
                  height="18"
                  loading="lazy"
                >
              {% endif %}
              <span>{{ copy }}</span>
            </span>
          {% endfor %}
        </span>
        <span class="chunk" aria-hidden="true">
          {% for i in (1..10) %}
            <span class="item">
              {% if section.settings.icon != blank %}
                <img
                  alt=""
                  class="icon"
                  src="{{ section.settings.icon | image_url }}"
                  width="18"
                  height="18"
                  loading="lazy"
                >
              {% endif %}
              <span>{{ copy }}</span>
            </span>
          {% endfor %}
        </span>
      </div>
    </div>
  </div>
</section>

{% schema %}
{
  "name": "Infinite Ticker",
  "settings": [
    { "type": "text", "id": "text", "label": "Text", "default": "VIDA QUE GENERA VIDA" },
    { "type": "image_picker", "id": "icon", "label": "Icon" },
    { "type": "image_picker", "id": "bg_image", "label": "Background image" },

    {
      "type": "color",
      "id": "bg_color",
      "label": "Background color",
      "default": "#00000000"
    },
    {
      "type": "range",
      "id": "font_size",
      "label": "Text size (px)",
      "min": 12,
      "max": 48,
      "step": 1,
      "default": 22
    },
    {
      "type": "range",
      "id": "height",
      "label": "Section height (px)",
      "min": 60,
      "max": 200,
      "step": 5,
      "default": 100
    },
    { "type": "color", "id": "text_color", "label": "Ticker text color", "default": "#F3EFCF" },
    {
      "type": "select",
      "id": "typography_variant",
      "label": "Typography",
      "options": [
        { "value": "primary", "label": "Heading font (uppercase)" },
        { "value": "secondary", "label": "Body font (uppercase)" }
      ],
      "default": "primary"
    },
    {
      "type": "select",
      "id": "font_variant",
      "label": "Font style",
      "options": [
        { "value": "normal", "label": "Normal (theme font)" },
        { "value": "mono", "label": "Monospace (IBMPlexMono-Light)" }
      ],
      "default": "normal"
    }
  ],
  "presets": [{ "name": "Infinite Ticker" }]
}
{% endschema %}
